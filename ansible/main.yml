- hosts: all
  tags:
    - security
  roles:
    - role: prometheus.prometheus.node_exporter
      become: yes
    - role: geerlingguy.security
      become: yes
      vars:
        security_ssh_permit_root_login: "yes"
        security_sudoers_passwordless:
          - ghost

- hosts: proxmox
  roles:
    - role: ironicbadger.proxmox_nag_removal
      become: yes

  tasks:
    - name: Use Proxmox free repository
      apt_repository:
        repo: 'deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription'
        state: present

    - name: Install sudo
      package:
        name: sudo
        state: present

    - name: Create user group
      group:
        name: ghost
        gid: 1000
        state: present

    - name: Create user
      user:
        name: ghost
        uid: 1000
        group: ghost
        groups: sudo
        shell: /bin/bash

    - name: Add SSH keys
      authorized_key:
        user: ghost
        state: present
        key: https://github.com/alex-phillips.keys

  #   - name: Download dark theme installer
  #     get_url:
  #       url: https://raw.githubusercontent.com/Weilbyte/PVEDiscordDark/master/PVEDiscordDark.sh
  #       dest: /usr/local/bin/PVEDiscordDark.sh
  #     register: dark_theme_downloaded

  #   - name: Install dark theme
  #     command: bash /usr/local/bin/PVEDiscordDark.sh install
  #     when: dark_theme_downloaded.changed

- hosts: all
  tasks:
    - name: Add SSH keys
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: https://github.com/alex-phillips.keys


- hosts:
    - mew
  tags:
    - snapraid
  roles:
    # - role: geerlingguy.samba
    #   become: true
    - role: ironicbadger.snapraid
      become: true
    # - role: ups-metrics
    #   become: true

- hosts: proxmox

  # vars:
  #   pip_install_packages:
  #     - name: docker

  pre_tasks:
    - name: Create docker cli-plugins directory
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
      become: yes

  roles:
    # - role: geerlingguy.pip
    #   become: yes
    - role: geerlingguy.docker
      become: yes
      vars:
        docker_compose_path: /usr/local/lib/docker/cli-plugins/docker-compose
        docker_compose_version: v2.30.3

  tasks:
    - name: Add user to 'docker' group
      become: true
      user:
        name: "{{ ansible_user }}"
        append: true
        groups: docker

    - name: Add ghost to 'docker' group
      become: true
      user:
        name: ghost
        append: true
        groups: docker

- hosts:
    - dragonite

  tasks:
    - name: Create NFS mount dir
      file:
        path: /mnt/storage
        state: directory
        mode: '0755'
        owner: 1000
        group: 1000
      become: yes

    - name: Mount MergerFS NFS
      ansible.posix.mount:
        src: 192.168.1.151:/mnt/storage
        path: /mnt/storage
        opts: rw,sync,hard
        state: mounted
        fstype: nfs
      become: yes


####################
###              ###
###  AUTORESTIC  ###
###              ###
####################
- hosts:
    - mew
    - dragonite
  tags:
    - restic
    - autorestic

  pre_tasks:
    - name: Generate autorestic config
      template:
        src: templates/autorestic.yml.j2
        dest: /root/.autorestic.yml
      become: yes

  roles:
    - role: rclone
    - role: fuzzymistborn.autorestic
      become: yes

  tasks:
    # - name: Run autorestic check
    #   ansible.builtin.command: "{{ autorestic_install_path }} check -c {{ autorestic_config_path }}"
    #   become: yes

    # although we have rclone above, that is for the root user (for restic), this is for primary user as well
    - name: Copy rclone config to user
      become: true
      copy:
        src: /root/.config/rclone/rclone.conf
        dest: "/home/{{ ansible_user }}/.config/rclone/rclone.conf"
        mode: '0600'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        remote_src: true
      when: ansible_user != "root"
