version: '3'
services:
#   funkwhale:
#     container_name: funkwhale
#     image: funkwhale/all-in-one:1.2.0
#     entrypoint: /bin/sh
#     command: "sleep infinity"
#     volumes:
#       - ${NAS}/music/beets/Music:/music:ro
#       - ${NAS}/docker/funkwhale:/data
#     environment:
#       - PUID=${PUID}
#       - PGID=${PGID}
#       - FUNKWHALE_HOSTNAME=fw.${SERVER_DOMAIN}
#       - FUNKWHALE_PROTOCOL=https
#       - NGINX_MAX_BODY_SIZE=100M
#       - FUNKWHALE_API_IP=127.0.0.1
#       - FUNKWHALE_API_PORT=5000
#       - DJANGO_SECRET_KEY=${FW_DJANGO_SECRET_KEY}
#       - NESTED_PROXY=1
#       - THROTTLING_ENABLED=false
#     labels:
#       port: 80
#       host: fw.${SERVER_DOMAIN}
#       custom_response_headers:
#         X-Frame-Options: ""

  funkwhale-redis:
    container_name: funkwhale-redis
    image: redis:6
    volumes:
      - ${NAS}/docker/funkwhale/redis:/data
    labels:
      namespace: media

  celeryworker:
    container_name: funkwhale-celery-worker
    image: funkwhale/funkwhale:1.2.0
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    #   celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    command: celery -A funkwhale_api.taskapp worker -l INFO --concurrency=${CELERYD_CONCURRENCY-0}
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"
    labels:
      namespace: media

  funkwhale-celerybeat:
    container_name: funkwhale-celerybeat
    image: funkwhale/funkwhale:1.2.0
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env
    command: celery -A funkwhale_api.taskapp beat --pidfile= -l INFO
    labels:
      namespace: media

  funkwhale:
    container_name: funkwhale
    image: funkwhale/funkwhale:1.2.0
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env
    environment:
      DJANGO_SECRET_KEY: d408036f4009de055a1eaf3a9b28a3540862ef365c29abd281f7d490c2b07b016f396293805d2bd9e9aafbd590
    volumes:
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"
      - "${STATIC_ROOT}:${STATIC_ROOT}"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend"
    labels:
      namespace: media

  funkwhale-proxy:
    container_name: funkwhale-proxy
    image: nginx
    depends_on:
      - funkwhale
    env_file: .env
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      - "${NAS}/docker/funkwhale/nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
      - "${NAS}/docker/funkwhale/nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "${MUSIC_DIRECTORY_SERVE_PATH-/srv/funkwhale/data/music}:${MUSIC_DIRECTORY_PATH-/music}:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}:ro"
      - "${STATIC_ROOT}:${STATIC_ROOT}:ro"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend:ro"
    command: >
        sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
        < /etc/nginx/conf.d/funkwhale.template
        > /etc/nginx/conf.d/default.conf
        && cat /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"
    labels:
      namespace: media
      port: 80
      host: fw.w00t.cloud
