services:
  oncall:
    container_name: oncall
    image: grafana/oncall:v1.3.22
    networks:
      - monitoring
    command: >
      sh -c "uwsgi --ini uwsgi.ini"
    env_file:
      - oncall.env
    volumes:
      - ${NAS}/docker/oncall/data:/var/lib/oncall
    depends_on:
      oncall-migrations:
        condition: service_completed_successfully
      oncall-redis:
        condition: service_healthy
    labels:
      app: oncall
      ingress:
        - port: 8080
          host: oncall.${SERVER_DOMAIN}

  oncall-celery:
    container_name: oncall-celery
    image: grafana/oncall:v1.3.22
    networks:
      - monitoring
      - external
    command: sh -c "./celery_with_exporter.sh"
    restart: unless-stopped
    env_file:
      - oncall.env
    volumes:
      - ${NAS}/docker/oncall/data:/var/lib/oncall
    depends_on:
      oncall-migrations:
        condition: service_completed_successfully
      oncall-redis:
        condition: service_healthy
    labels:
      app: oncall

  oncall-migrations:
    container_name: oncall-migrations
    image: grafana/oncall:v1.3.22
    networks:
      - monitoring
    command: python manage.py migrate --noinput
    env_file:
      - oncall.env
    volumes:
      - ${NAS}/docker/oncall/data:/var/lib/oncall
    depends_on:
      oncall-redis:
        condition: service_healthy
    labels:
      app: oncall

  oncall-redis:
    container_name: oncall-redis
    image: redis:7.0.5
    networks:
      - monitoring
    volumes:
      - ${NAS}/docker/oncall/redis:/data
    deploy:
      resources:
        limits:
          memory: 500m
          cpus: "0.5"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      interval: 5s
      retries: 10
    labels:
      app: oncall
