version: "3"
services:
  funkwhale-redis:
    container_name: funkwhale-redis
    env_file: .env
    image: redis:5
    networks:
      - default
      - data
    volumes:
      - ${NAS}/docker/funkwhale/redis:/data
    labels:
      namespace: media
      app: funkwhale

  funkwhale-celeryworker:
    container_name: funkwhale-celeryworker
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
      - data
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env.funkwhale
    # Celery workers handle background tasks (such file imports or federation
    # messaging). The more processes a worker gets, the more tasks
    # can be processed in parallel. However, more processes also means
    # a bigger memory footprint.
    # By default, a worker will span a number of process equal to your number
    # of CPUs. You can adjust this, by explicitly setting the --concurrency
    # flag:
    command: celery -A funkwhale_api.taskapp worker -l INFO --concurrency=4
    environment:
      - C_FORCE_ROOT=true
    volumes:
      - "${NAS}/music/beets/Music:/music:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"
    labels:
      namespace: media
      app: funkwhale

  funkwhale-celerybeat:
    container_name: funkwhale-celerybeat
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
      - data
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env.funkwhale
    command: celery -A funkwhale_api.taskapp beat --pidfile= -l INFO
    labels:
      namespace: media
      app: funkwhale

  funkwhale:
    container_name: funkwhale
    image: funkwhale/funkwhale:${FUNKWHALE_VERSION:-latest}
    networks:
      - default
      - data
    depends_on:
      - postgres
      - funkwhale-redis
    env_file: .env.funkwhale
    volumes:
      - "${NAS}/music/beets/Music:/music:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}"
      - "${STATIC_ROOT}:${STATIC_ROOT}"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend"
    labels:
      namespace: media
      app: funkwhale

  funkwhale-proxy:
    container_name: funkwhale-proxy
    image: nginx
    depends_on:
      - funkwhale
    env_file:
      - .env.funkwhale
    environment:
      # Override those variables in your .env file if needed
      - "NGINX_MAX_BODY_SIZE=${NGINX_MAX_BODY_SIZE-100M}"
    volumes:
      - "/mnt/storage/docker/funkwhale/nginx/funkwhale.template:/etc/nginx/conf.d/funkwhale.template:ro"
      - "/mnt/storage/docker/funkwhale/nginx/funkwhale_proxy.conf:/etc/nginx/funkwhale_proxy.conf:ro"
      - "${NAS}/music/beets/Music:/music:ro"
      - "${MEDIA_ROOT}:${MEDIA_ROOT}:ro"
      - "${STATIC_ROOT}:${STATIC_ROOT}:ro"
      - "${FUNKWHALE_FRONTEND_PATH}:/frontend:ro"
    command: >
        sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\"
        < /etc/nginx/conf.d/funkwhale.template
        > /etc/nginx/conf.d/default.conf
        && cat /etc/nginx/conf.d/default.conf
        && nginx -g 'daemon off;'"
    labels:
      port: 80
      host: fw.${SERVER_DOMAIN}
      namespace: media
      app: funkwhale
