version: '3'
services:
  drone:
    container_name: drone
    image: drone/drone:2.18.0
    networks:
      - data
      - external
    depends_on:
      - postgres
    environment:
      DRONE_GIT_ALWAYS_AUTH: "true"
      DRONE_SERVER_HOST: ci.${SERVER_DOMAIN}
      DRONE_SERVER_PROTO: https
      DRONE_GITHUB_CLIENT_ID: ${DRONE_GITHUB_CLIENT_ID}
      DRONE_GITHUB_CLIENT_SECRET: ${DRONE_GITHUB_CLIENT_SECRET}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_USER_CREATE: username:alex-phillips,admin:true
      DRONE_USER_FILTER: alex-phillips
      DRONE_DATABASE_DRIVER: postgres
      DRONE_DATABASE_DATASOURCE: postgres://drone:${DB_PASS_DRONE}@postgres:5432/drone?sslmode=disable
    labels:
      app: drone
      port: 80
      host: ci.${SERVER_DOMAIN}

  drone-runner-docker:
    container_name: drone-runner-docker
    image: drone/drone-runner-docker:1.8.3
    networks:
      - external
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DRONE_RPC_PROTO: https
      DRONE_RPC_HOST: ci.${SERVER_DOMAIN}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_RUNNER_CAPACITY: 2
      DRONE_RUNNER_NAME: whatsinaname
    labels:
      app: drone
